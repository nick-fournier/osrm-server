events {
    worker_connections 1024;
}

http {
    # DNS resolver to use for resolving upstream hostnames
    resolver 127.0.0.11 valid=30s;

    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    send_timeout 300s;

    # Define upstream services
    upstream osrm_car {
        server osrm-backend-car:5001;
    }

    upstream osrm_bicycle {
        server osrm-backend-bicycle:5002;
    }

    upstream osrm_foot {
        server osrm-backend-foot:5003;
    }

    server {
        listen 5000 default_server;
        listen [::]:5000 default_server ipv6only=on;
        large_client_header_buffers 8 256k;

        # Proxy settings for various routes
        location ~* .*/v1/.*\b(?:driving|drive|car|auto)\b.* {
            proxy_pass http://osrm_car;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location ~* .*/v1/.*\b(?:bicycling|cycling|biking|bike|bicycle)\b.* {
            proxy_pass http://osrm_bicycle;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        location ~* .*/v1/.*\b(?:walk|walking|foot|pedestrian)\b.* {
            proxy_pass http://osrm_foot;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Default 404 for all other requests
        location / {
            add_header Content-Type text/plain;
            return 404 'Your request is bad and you should feel bad.';
        }
    }
}
